{
  "name": "Apphook",
  "tagline": "Simple Github Deploy Server",
  "body": "# apphook\r\nSimple Github Deploy Server\r\n\r\n### Wut?\r\nSometimes you need to do things on your server when other people do other things on Github. This lets you do that.\r\n\r\nReal documentation coming soon\r\n\r\n### How To\r\nSo you want some apphooks? It's pretty simple;\r\n\r\n1. Clone this repository to your server - `git clone https://github.com/Commander-lol/apphook`\r\n2. Make a copy of `config.example.json` called `config.json`\r\n3. Create a file in `/hooks` that exports some JSON that describes what you're doing. The only hard and fast requirement \r\nis an array keyed by `hooks` - this specifies what plugins to run when this hook gets fired. Any top level strings can \r\nalso include environment variables by surrounding them with `%`s (e.g. `$HOME` would be `%HOME%`...it's a \r\n[lineup](https://github.com/Commander-lol/lineup) template)\r\n4. Write some plugins in the `/plugins` folder to do stuff. A plugin should export a function that takes as its parameters\r\nthe configuration file that triggered it (so set up some other properties in that config file, silly!) and the github\r\nwebhook payload. It should **ALWAYS** return a promise. Coming soon will be a facility to wrap non-promise returns \r\nfrom those silly people that don't like playing nicely with the other kids\r\n5. Do your funky thing to run a node app on your server (`npm start` or `node apphook`). It's different for everyone, \r\nit's all good.\r\n6. On your github repo, add a webhook (`Settings` > `Webhooks & services` > `Add Webhook`) where the url is \r\n`http(s)://my.domain.com/{hook}` where `{hook}` is the name of the file you created in `/hooks` \r\n(without the extension - just make sure it's something your node engine can `require`)\r\n7. Do some stuff with your repo\r\n8. Party!\r\n\r\n### Examples\r\nThere isn't currently an example hook config, but there is an example plugin.\r\n\r\n`git-pull` resets and then pulls the git repo in the specified path. In the config you need to specify the `path` to\r\nthe folder containing the repo, and optionally a `remote` and `branch` to reset, checkout and pull\r\n\r\n### Licensing\r\nThis code is covered under the BSD-3-Clause license, but if that doesn't work with your flow then contact me and we\r\ncan probably work something out\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}